user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 1024;
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log off;
  error_log off;

  #@@server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  types_hash_max_size 2048;

  gzip on;
  gzip_vary on;
  gzip_proxied any;

  client_body_timeout 300s;
  client_header_timeout 300s;
  client_max_body_size 30m;
  keepalive_timeout 300s;
  send_timeout 300s;

  proxy_connect_timeout 300s;
  proxy_read_timeout 300s;
  proxy_send_timeout 300s;

  proxy_set_header host $host;
  proxy_set_header x-real-ip $remote_addr;
  proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
  proxy_set_header x-forwarded-proto $scheme;

  proxy_buffering off;
  proxy_ssl_verify off;
  proxy_redirect off;
  proxy_cache off;

  ssl_certificate /etc/letsencrypt/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/privkey.pem;

  upstream api {
    server docker-host:8000 max_fails=0 fail_timeout=1s;
  }

  #
  # https forwarder
  #

  server {
    server_name _;

    listen 80 default_server;

    location = /robots.txt {
      return 200 'User-agent: *\nDisallow: /\n';
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  #
  # api
  #

  server {
    server_name api.local.day1company.co.kr;

    listen 443 ssl;

    access_log /fc/log/api-access.log combined;
    error_log /fc/log/api-error.log notice;

    location = /robots.txt {
      return 200 'User-agent: *\nDisallow: /\n';
    }

    location / {
      proxy_pass http://api;
    }
  }

}
