name: Backend-API-Test
on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.pull_request.labels.*.name), 'ci-skip')"
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [16.x]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mysql:   # 사용할 서비스 명
        image: mysql:8.0  # 사용할 서비스의 이미지(도커 개념 기반)
        env:   # 사용할 서비스의 환경설정
          MYSQL_USER: fastcampus
          MYSQL_PASSWORD: fastcampus
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: fastcampus_bpo
        ports: # 열어줄 포트, 8080:3306 형태로도 가능
          - 3306
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.cache
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare dot npmrc for private registry
        run: echo //npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }} >> ~/.npmrc
      - name: Bootstrap
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Start MySQL
        run: sudo service mysql start
      - name: Create DB
        run: mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS dayone_backend_test CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci; CREATE USER 'root'@'%' IDENTIFIED BY 'root'; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;CREATE USER 'dayone'@'%' IDENTIFIED BY 'dayone'; GRANT ALL PRIVILEGES ON *.* TO 'dayone'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES; "
      - name: Backend API Test
        run: |
          npm run ci:test
        env:
          NODE_ENV: test
          CI: true
